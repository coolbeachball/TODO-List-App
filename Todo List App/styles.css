:root {
    --dark-blue: #1d3557;
    --blue: #457b9d;
    --red: #e63946;
    --green: #0ec40e;
    --light: #eef6fa;
    --light-blue: #d0e6f1;
    --very-light-blue: #edf8fa;
    --active-blue: #6aa3c7;
    --active-red: #e9525e;
    --active-green: #66d366; 
    --shadow: #9caab3;
}
/* Add transition effect for various changes */
* {
    border: none;
    font-family: 'Gill Sans', 'Gill Sans MT', Calibri, 'Trebuchet MS', sans-serif;
    box-sizing: border-box;
}

body {
    background-color: var(--blue);
    margin: 0;
}

/* the whole page */
.container {
    width: 100%;
    margin: 1em 0;
    display: flex;
    justify-content: center;
    align-items: center;
    flex-direction: column;
    transition: transform 0.3s ease-out; /* Smooth transition for container */
}

/* Todolist background */
.todolist {
    background-color: var(--light);
    padding: 1em;
    border-radius: 1em;
    max-width: 35em;
    width: 100%;
}

/* Row container styles */
.row {
    background-color: var(--light-blue);
    border-radius: 1em;
    margin-right: 0 auto;
    display: flex;
    justify-content: space-between;
}

/* Input box and pin button */
.inputBox {
    background-color: var(--light-blue);
    color: var(--dark-blue);
    outline: none;
    transition: all 0.3s ease; /* Smooth input box focus effect */
}

.inputBox::placeholder {
    color: var(--blue);
}

.inputBox, .pinBtn {
    padding: 0.5em;
    font-size: larger;
    border-radius: 0.8em;
}

.pinBtn {
    background-color: var(--red);
    color: var(--light);
    padding: 0.5em 1em;
    cursor: pointer;
}

.pinBtn:hover {
    background-color: var(--active-red);
}

/* List container margin */
.listContainer {
    margin-top: 3em;
}

/* Task item container */
.containerLi {
    list-style-type: none;
    background-color: var(--light-blue);
    margin: 0.5em 2em;
    padding: 0.5em;
    border-radius: 1em;
    display: flex;
    flex-direction: row;
    justify-content: start;
    align-items: center;
    opacity: 0; /* Start invisible for animation */
    transform: translateY(20px); /* Start off 20px below */
    animation: slideIn 0.4s ease-out forwards; /* Animate slide in */
}

.containerLi button {
    cursor: pointer;
}

/* Animation for task sliding in */
@keyframes slideIn {
    to {
        opacity: 1;
        transform: translateY(0);
    }
}

/* Task text styling */
.task-text {
    color: var(--dark-blue);
    display: flex;
    align-items: center;
    margin: 0 1em;
    overflow-x: scroll; /* scroll on longer words */
    transition: all 0.3s ease; /* Smooth text changes */
}

/* Task completion animation (cross out) */
.task-text.completed {
    text-decoration: line-through;
    color: grey;
    transition: text-decoration 0.3s ease, color 0.3s ease; /* Smooth crossing out */
}

/* Button container for move-up/move-down */
.up-down {
    color: var(--light);
    display: flex;
    flex-direction: column;
    margin-right: 0.5em;
}

/* Move-up and move-down buttons */

.move-up, .move-down {
    background-color: transparent;
    color: var(--dark-blue);
    padding: 0.3em;
    border-radius: 1em;
    transition: background-color 0.3s ease; /* Smooth hover effect */
}

.move-up:hover, .move-down:hover {
    background-color: var(--active-blue); /* Change on hover */
}

/* Remove button */
.remove {
    background-color: transparent;
    color: var(--red);
    padding: 0.3em;
    border-radius: 50%;
    transition: color 0.3s ease; /* Smooth color change */
}

.remove:hover {
    background-color: var(--active-red); /* Hover effect */
    color: var(--light);
    transition: background-color 0.3s ease, transform 0.3s ease; /* Smooth button effects */
}

/* Check button for task completion */
.checked {
    background-color: transparent;
    color: var(--green);
    margin-left: auto;
    border-radius: 50%;
    height: 1.5em;
    width: 1.5em;
    display: flex;
    justify-content: center;
    align-items: center;
    transition: background-color 0.3s ease, transform 0.3s ease; /* Smooth button effects */
}

.checked:hover {
    background-color: var(--green); /* Hover effect */
    color: var(--light);
}

/* Task removal animation (fade out) */
@keyframes fadeOut {
    to {
        opacity: 0;
        transform: translateY(20px); /* Move downward slightly while fading */
    }
}

/* Slide task out when removed */
.containerLi.removed {
    animation: fadeOut 0.4s ease-out forwards;
}

/* Add transition for smooth task movement */
.containerLi.moving-up,
.containerLi.moving-down {
    transition: transform 0.3s ease-in-out; /* Smooth transition for position change */
}
